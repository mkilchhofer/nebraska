# Default values for nebraska.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: quay.io
  repository: flatcar/nebraska
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

  pullSecrets: []
  # - name: myregistrykey
nameOverride: ""
fullnameOverride: ""

config:
  app:
    logoPath: /nebraska/assets/kinvolk-logo.svg
    title: Kinvolk Update Service
    headerStyle: dark
    httpStaticDir: /nebraska/static

  syncer:
    enabled: true
    # interval: 1h
    # updateURL: "https://public.update.flatcar-linux.net/v1/update/"

  hostFlatcarPackages:
    enabled: false
    packagesPath: /mnt/packages
    # nebraskaURL: http://flatcar.example.com
    persistence:
      enabled: false
      storageClass:
      accessModes:
        - ReadWriteOnce
      size: 10Gi

  auth:
    mode: noop
    github:
      clientID:
      clientSecret:
      sessionAuthKey:
      sessionCryptKey:
      webhookSecret:
      readWriteTeams:
      readOnlyTeams:
      enterpriseURL:

  database:
    host: ""
    port: 5432
    dbname: '{{ .Values.postgresql.postgresqlDatabase }}'
    username: '{{ .Values.postgresql.postgresqlUsername }}'
    password: ""
    passwordExistingSecret:
      enabled: true
      name: '{{ .Release.Name }}-postgresql'
      key: postgresql-password

extraArgs: []
  # - "-http-log"
  # - "-api-endpoint-suffix=mysecret"

extraEnvVars:
  TZ: UTC
  # PORT: 8080
  # GIN_MODE: release
  # LOGXI: "*=DBG"
  # LOGXI_FORMAT: "LTSV"
  # NEBRASKA_DB_MAX_OPEN_CONNS: 25
  # NEBRASKA_DB_MAX_IDLE_CONNS: 25
  # NEBRASKA_DB_CONN_MAX_LIFETIME: 300

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

strategy:
  ## 'RollingUpdate' or 'Recreate'
  type: Recreate
  # rollingUpdate:
  #   maxSurge: 25%
  #   maxUnavailable: 25%

podAnnotations: {}

podSecurityContext:
  runAsUser: 65534
  runAsGroup: 65534
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - flatcar.example.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - flatcar.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: http

readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: http

# Configuration values for the postgresql dependency.
# ... for more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  enabled: true
  postgresqlDatabase: nebraska
  postgresqlUsername: postgres
  postgresqlPassword: changeIt
  image:
    tag: 12.5.0-debian-10-r76
  persistence:
    enabled: false
    storageClass:
    accessModes:
      - ReadWriteOnce
    size: 1Gi

# dummy
